<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.6.9 on linux)" generated="20230731 10:13:13.438" rpa="false" schemaversion="2">
<suite id="s1" name="ASM-CopyString" source="/home/app/Program_Ref/stm32f1-assembly/Ex02-CopyString/ASM-CopyString.robot">
<kw name="Setup" library="renode-keywords" type="SETUP">
<msg timestamp="20230731 10:13:13.538" level="TRACE">Arguments: [  ]</msg>
<kw name="Evaluate" library="BuiltIn">
<var>${SYSTEM}</var>
<arg>platform.system()</arg>
<arg>modules=platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230731 10:13:13.538" level="TRACE">Arguments: [ 'platform.system()' | modules='platform' ]</msg>
<msg timestamp="20230731 10:13:13.547" level="TRACE">Return: 'Linux'</msg>
<msg timestamp="20230731 10:13:13.548" level="INFO">${SYSTEM} = Linux</msg>
<status status="PASS" starttime="20230731 10:13:13.538" endtime="20230731 10:13:13.548"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${CONFIGURATION}</var>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG}</arg>
<arg>Debug</arg>
<arg>${CONFIGURATION}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230731 10:13:13.549" level="TRACE">Arguments: [ 'not True and False' | 'Debug' | '${CONFIGURATION}' ]</msg>
<msg timestamp="20230731 10:13:13.549" level="TRACE">Return: 'Release'</msg>
<msg timestamp="20230731 10:13:13.549" level="INFO">${CONFIGURATION} = Release</msg>
<status status="PASS" starttime="20230731 10:13:13.548" endtime="20230731 10:13:13.549"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{PARAMS}</var>
<arg>--robot-server-port</arg>
<arg>${PORT_NUMBER}</arg>
<arg>--hide-log</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230731 10:13:13.550" level="TRACE">Arguments: [ '--robot-server-port' | '9999' | '--hide-log' ]</msg>
<msg timestamp="20230731 10:13:13.550" level="TRACE">Return: ['--robot-server-port', '9999', '--hide-log']</msg>
<msg timestamp="20230731 10:13:13.550" level="INFO">@{PARAMS} = [ --robot-server-port | 9999 | --hide-log ]</msg>
<status status="PASS" starttime="20230731 10:13:13.549" endtime="20230731 10:13:13.550"/>
</kw>
<if>
<branch type="IF" condition="${DISABLE_XWT}">
<kw name="Insert Into List" library="Collections">
<arg>${PARAMS}</arg>
<arg>0</arg>
<arg>--disable-xwt</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="NOT RUN" starttime="20230731 10:13:13.550" endtime="20230731 10:13:13.550"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:13.550" endtime="20230731 10:13:13.550"/>
</branch>
<status status="PASS" starttime="20230731 10:13:13.550" endtime="20230731 10:13:13.551"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER}">
<kw name="File Should Exist" library="OperatingSystem">
<arg>${DIRECTORY}/${BINARY_NAME}</arg>
<arg>msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="NOT RUN" starttime="20230731 10:13:13.551" endtime="20230731 10:13:13.551"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:13.551" endtime="20230731 10:13:13.551"/>
</branch>
<status status="PASS" starttime="20230731 10:13:13.551" endtime="20230731 10:13:13.551"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows' and not ${NET_PLATFORM}">
<kw name="Start Process" library="Process">
<arg>mono</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" starttime="20230731 10:13:13.552" endtime="20230731 10:13:13.552"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:13.551" endtime="20230731 10:13:13.552"/>
</branch>
<status status="PASS" starttime="20230731 10:13:13.551" endtime="20230731 10:13:13.552"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'">
<kw name="Start Process" library="Process">
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" starttime="20230731 10:13:13.552" endtime="20230731 10:13:13.552"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:13.552" endtime="20230731 10:13:13.552"/>
</branch>
<status status="PASS" starttime="20230731 10:13:13.552" endtime="20230731 10:13:13.552"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and ${NET_PLATFORM}">
<kw name="Start Process" library="Process">
<arg>dotnet ${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" starttime="20230731 10:13:13.553" endtime="20230731 10:13:13.553"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:13.553" endtime="20230731 10:13:13.553"/>
</branch>
<status status="PASS" starttime="20230731 10:13:13.552" endtime="20230731 10:13:13.553"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows' and not ${NET_PLATFORM}">
<kw name="Start Process" library="Process">
<arg>mono</arg>
<arg>--debug</arg>
<arg>--debugger-agent\=transport\=dt_socket,address\=0.0.0.0:${SERVER_REMOTE_PORT},server\=y,suspend\=${SERVER_REMOTE_SUSPEND}</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" starttime="20230731 10:13:13.554" endtime="20230731 10:13:13.554"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:13.553" endtime="20230731 10:13:13.554"/>
</branch>
<status status="PASS" starttime="20230731 10:13:13.553" endtime="20230731 10:13:13.554"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'">
<kw name="Fatal Error" library="BuiltIn">
<arg>Windows doesn't support server remote debug option.</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20230731 10:13:13.554" endtime="20230731 10:13:13.554"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:13.554" endtime="20230731 10:13:13.554"/>
</branch>
<status status="PASS" starttime="20230731 10:13:13.554" endtime="20230731 10:13:13.554"/>
</if>
<if>
<branch type="IF" condition="not '${SYSTEM}' == 'Windows'">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<msg timestamp="20230731 10:13:13.555" level="TRACE">Arguments: [ '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20230731 10:13:13.555" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20230731 10:13:13.563" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20230731 10:13:13.563" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20230731 10:13:13.555" endtime="20230731 10:13:13.563"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20230731 10:13:14.563" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20230731 10:13:14.566" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20230731 10:13:14.566" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20230731 10:13:14.563" endtime="20230731 10:13:14.566"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20230731 10:13:15.567" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20230731 10:13:15.569" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20230731 10:13:15.569" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20230731 10:13:15.567" endtime="20230731 10:13:15.569"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20230731 10:13:16.570" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20230731 10:13:16.572" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20230731 10:13:16.572" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20230731 10:13:16.569" endtime="20230731 10:13:16.572"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20230731 10:13:17.572" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20230731 10:13:17.575" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20230731 10:13:17.575" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20230731 10:13:17.572" endtime="20230731 10:13:17.575"/>
</kw>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20230731 10:13:18.575" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20230731 10:13:19.140" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230731 10:13:18.575" endtime="20230731 10:13:19.141"/>
</kw>
<msg timestamp="20230731 10:13:19.141" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230731 10:13:13.555" endtime="20230731 10:13:19.141"/>
</kw>
<status status="PASS" starttime="20230731 10:13:13.555" endtime="20230731 10:13:19.141"/>
</branch>
<status status="PASS" starttime="20230731 10:13:13.554" endtime="20230731 10:13:19.141"/>
</if>
<if>
<branch type="IF" condition="'${SYSTEM}' == 'Windows'">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230731 10:13:19.142" endtime="20230731 10:13:19.142"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:19.141" endtime="20230731 10:13:19.142"/>
</branch>
<status status="PASS" starttime="20230731 10:13:19.141" endtime="20230731 10:13:19.142"/>
</if>
<kw name="Set Default Uart Timeout" library="Remote">
<arg>${DEFAULT_UART_TIMEOUT}</arg>
<msg timestamp="20230731 10:13:19.142" level="TRACE">Arguments: [ '8' ]</msg>
<msg timestamp="20230731 10:13:19.185" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230731 10:13:19.142" endtime="20230731 10:13:19.185"/>
</kw>
<if>
<branch type="IF" condition="${SAVE_LOG_ON_FAIL}">
<kw name="Enable Logging To Cache" library="Remote">
<msg timestamp="20230731 10:13:19.186" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230731 10:13:19.194" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230731 10:13:19.186" endtime="20230731 10:13:19.194"/>
</kw>
<status status="PASS" starttime="20230731 10:13:19.186" endtime="20230731 10:13:19.194"/>
</branch>
<status status="PASS" starttime="20230731 10:13:19.185" endtime="20230731 10:13:19.194"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${allowed_chars}</var>
<arg>abcdefghijklmnopqrstuvwxyz01234567890_-</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230731 10:13:19.195" level="TRACE">Arguments: [ 'abcdefghijklmnopqrstuvwxyz01234567890_-' ]</msg>
<msg timestamp="20230731 10:13:19.195" level="TRACE">Return: 'abcdefghijklmnopqrstuvwxyz01234567890_-'</msg>
<msg timestamp="20230731 10:13:19.195" level="INFO">${allowed_chars} = abcdefghijklmnopqrstuvwxyz01234567890_-</msg>
<status status="PASS" starttime="20230731 10:13:19.194" endtime="20230731 10:13:19.195"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${metrics_fname}</var>
<arg>${SUITE_NAME}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230731 10:13:19.196" level="TRACE">Arguments: [ 'ASM-CopyString' ]</msg>
<msg timestamp="20230731 10:13:19.196" level="TRACE">Return: 'asm-copystring'</msg>
<msg timestamp="20230731 10:13:19.196" level="INFO">${metrics_fname} = asm-copystring</msg>
<status status="PASS" starttime="20230731 10:13:19.195" endtime="20230731 10:13:19.196"/>
</kw>
<kw name="Replace String" library="String">
<var>${metrics_fname}</var>
<arg>${metrics_fname}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 10:13:19.197" level="TRACE">Arguments: [ 'asm-copystring' | ' ' | '_' ]</msg>
<msg timestamp="20230731 10:13:19.197" level="TRACE">Return: 'asm-copystring'</msg>
<msg timestamp="20230731 10:13:19.197" level="INFO">${metrics_fname} = asm-copystring</msg>
<status status="PASS" starttime="20230731 10:13:19.196" endtime="20230731 10:13:19.197"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${metrics_fname}</var>
<arg>${metrics_fname}</arg>
<arg>[^${allowed_chars}]+</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230731 10:13:19.200" level="TRACE">Arguments: [ 'asm-copystring' | '[^abcdefghijklmnopqrstuvwxyz01234567890_-]+' | '' ]</msg>
<msg timestamp="20230731 10:13:19.200" level="TRACE">Return: 'asm-copystring'</msg>
<msg timestamp="20230731 10:13:19.200" level="INFO">${metrics_fname} = asm-copystring</msg>
<status status="PASS" starttime="20230731 10:13:19.197" endtime="20230731 10:13:19.201"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${metrics_path}</var>
<arg>${RESULTS_DIRECTORY}</arg>
<arg>profiler-${metrics_fname}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20230731 10:13:19.201" level="TRACE">Arguments: [ '/home/app/Program_Ref/stm32f1-assembly/Ex02-CopyString/test' | 'profiler-asm-copystring' ]</msg>
<msg timestamp="20230731 10:13:19.201" level="TRACE">Return: '/home/app/Program_Ref/stm32f1-assembly/Ex02-CopyString/test/profiler-asm-copystring'</msg>
<msg timestamp="20230731 10:13:19.201" level="INFO">${metrics_path} = /home/app/Program_Ref/stm32f1-assembly/Ex02-CopyString/test/profiler-asm-copystring</msg>
<status status="PASS" starttime="20230731 10:13:19.201" endtime="20230731 10:13:19.202"/>
</kw>
<if>
<branch type="IF" condition="${CREATE_EXECUTION_METRICS}">
<kw name="Execute Command" library="Remote">
<arg>EnableProfilerGlobally "${metrics_path}"</arg>
<status status="NOT RUN" starttime="20230731 10:13:19.202" endtime="20230731 10:13:19.202"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:19.202" endtime="20230731 10:13:19.203"/>
</branch>
<status status="PASS" starttime="20230731 10:13:19.202" endtime="20230731 10:13:19.203"/>
</if>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20230731 10:13:19.203" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230731 10:13:19.224" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230731 10:13:19.203" endtime="20230731 10:13:19.224"/>
</kw>
<msg timestamp="20230731 10:13:19.224" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230731 10:13:13.538" endtime="20230731 10:13:19.224"/>
</kw>
<test id="s1-t1" name="Run CPU First">
<kw name="Create Machine" library="Renode-Common" type="SETUP">
<msg timestamp="20230731 10:13:19.226" level="TRACE">Arguments: [  ]</msg>
<kw name="Execute Command" library="Remote">
<arg>mach create</arg>
<msg timestamp="20230731 10:13:19.226" level="TRACE">Arguments: [ 'mach create' ]</msg>
<msg timestamp="20230731 10:13:19.304" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230731 10:13:19.226" endtime="20230731 10:13:19.305"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>machine LoadPlatformDescription ${MACHINE}</arg>
<msg timestamp="20230731 10:13:19.305" level="TRACE">Arguments: [ 'machine LoadPlatformDescription @platforms/cpus/stm32f103.repl' ]</msg>
<msg timestamp="20230731 10:13:21.707" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230731 10:13:19.305" endtime="20230731 10:13:21.707"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>sysbus LoadELF ${FIRMWARE}</arg>
<msg timestamp="20230731 10:13:21.708" level="TRACE">Arguments: [ 'sysbus LoadELF main.elf' ]</msg>
<msg timestamp="20230731 10:13:21.732" level="FAIL">KeywordException: Could not execute command 'sysbus LoadELF main.elf': There was an error executing command 'sysbus LoadELF main.elf'File does not exist: main.elf
</msg>
<msg timestamp="20230731 10:13:21.732" level="DEBUG">KeywordException:   at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in &lt;aeea2e33ea654cfabae63b60ba0e127a&gt;:0 
</msg>
<status status="FAIL" starttime="20230731 10:13:21.708" endtime="20230731 10:13:21.732"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>sysbus.cpu ExecutionMode SingleStepNonBlocking</arg>
<status status="NOT RUN" starttime="20230731 10:13:21.732" endtime="20230731 10:13:21.732"/>
</kw>
<status status="FAIL" starttime="20230731 10:13:19.225" endtime="20230731 10:13:21.732"/>
</kw>
<kw name="Quit Machine" library="Renode-Common" type="TEARDOWN">
<msg timestamp="20230731 10:13:21.733" level="TRACE">Arguments: [  ]</msg>
<kw name="Execute Command" library="Remote">
<arg>Clear</arg>
<msg timestamp="20230731 10:13:21.734" level="TRACE">Arguments: [ 'Clear' ]</msg>
<msg timestamp="20230731 10:13:21.866" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230731 10:13:21.734" endtime="20230731 10:13:21.866"/>
</kw>
<msg timestamp="20230731 10:13:21.866" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230731 10:13:21.733" endtime="20230731 10:13:21.866"/>
</kw>
<status status="FAIL" starttime="20230731 10:13:19.224" endtime="20230731 10:13:21.867">Setup failed:
KeywordException: Could not execute command 'sysbus LoadELF main.elf': There was an error executing command 'sysbus LoadELF main.elf'File does not exist: main.elf
</status>
</test>
<kw name="Teardown" library="renode-keywords" type="TEARDOWN">
<msg timestamp="20230731 10:13:21.869" level="TRACE">Arguments: [  ]</msg>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER}">
<kw name="Stop Remote Server" library="Remote">
<status status="NOT RUN" starttime="20230731 10:13:21.870" endtime="20230731 10:13:21.870"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:21.870" endtime="20230731 10:13:21.871"/>
</branch>
<status status="PASS" starttime="20230731 10:13:21.870" endtime="20230731 10:13:21.871"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER}">
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230731 10:13:21.871" endtime="20230731 10:13:21.871"/>
</kw>
<status status="NOT RUN" starttime="20230731 10:13:21.871" endtime="20230731 10:13:21.871"/>
</branch>
<status status="PASS" starttime="20230731 10:13:21.871" endtime="20230731 10:13:21.871"/>
</if>
<msg timestamp="20230731 10:13:21.871" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230731 10:13:21.869" endtime="20230731 10:13:21.871"/>
</kw>
<meta name="HotSpot_Action">-</meta>
<status status="FAIL" starttime="20230731 10:13:13.440" endtime="20230731 10:13:21.871"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="ASM-CopyString">ASM-CopyString</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230731 10:13:21.867" level="ERROR">Calling method 'end_test' of listener '/home/renode/tests/robot_output_formatter.py' failed: UnicodeEncodeError: 'ascii' codec can't encode characters in position 6-7: ordinal not in range(128)</msg>
</errors>
</robot>
